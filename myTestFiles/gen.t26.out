        .text
        .globl main
main:
        jal      M0
        li       $v0, 10
        syscall


F0:
        subu     $sp, $sp, 12
        sw       $ra, 0($sp)
        sw       $a0, 4($sp)
        sw       $a1, 8($sp)
L1:
        lw       $t0, 4($sp)
        li       $t1, 0
        seq      $t0, $t0, $t1
        beqz     $t0, Q0
        j        Q1
Q0:
        j        L4
Q1:
        li       $t0, 0
        move     $a0, $t0
        jal      R4

        j        L0
L4:
        lw       $t0, 4($sp)
        lw       $t1, 8($sp)
        bnez     $t1, L5
        .data
L6:
        .byte 68, 105, 118, 105, 115, 105, 111, 110, 32, 98, 121, 32, 122, 101, 114, 111, 10, 0
        .align 2
        .text
        la       $a0, L6
        j        R6
L5:
        div      $t0, $t0, $t1
        lw       $t1, 8($sp)
        move     $a0, $t0
        move     $a1, $t1
        jal      F0

        lw       $t0, 4($sp)
        lw       $t1, 8($sp)
        bnez     $t1, L7
        .data
L8:
        .byte 68, 105, 118, 105, 115, 105, 111, 110, 32, 98, 121, 32, 122, 101, 114, 111, 10, 0
        .align 2
        .text
        la       $a0, L8
        j        R6
L7:
        rem      $t0, $t0, $t1
        move     $a0, $t0
        jal      R4


L0:
        lw       $ra, 0($sp)
        addu     $sp, $sp, 12
        jr       $ra

F1:
        subu     $sp, $sp, 8
        sw       $ra, 0($sp)
        sw       $a0, 4($sp)
        lw       $t0, 4($sp)
        move     $a0, $t0
        jal      R4

        .data
L10:
        .byte 32, 61, 32, 10, 0
        .align 2
        .text
        la       $t0, L10
        move     $a0, $t0
        jal      R5

        .data
L11:
        .byte 9, 0
        .align 2
        .text
        la       $t0, L11
        move     $a0, $t0
        jal      R5

        lw       $t0, 4($sp)
        li       $t1, 2
        move     $a0, $t0
        move     $a1, $t1
        jal      F0

        .data
L12:
        .byte 32, 40, 98, 97, 115, 101, 32, 50, 41, 10, 0
        .align 2
        .text
        la       $t0, L12
        move     $a0, $t0
        jal      R5

        .data
L13:
        .byte 9, 0
        .align 2
        .text
        la       $t0, L13
        move     $a0, $t0
        jal      R5

        lw       $t0, 4($sp)
        li       $t1, 8
        move     $a0, $t0
        move     $a1, $t1
        jal      F0

        .data
L14:
        .byte 32, 40, 98, 97, 115, 101, 32, 56, 41, 10, 0
        .align 2
        .text
        la       $t0, L14
        move     $a0, $t0
        jal      R5

        .data
L15:
        .byte 9, 0
        .align 2
        .text
        la       $t0, L15
        move     $a0, $t0
        jal      R5

        lw       $t0, 4($sp)
        li       $t1, 10
        move     $a0, $t0
        move     $a1, $t1
        jal      F0

        .data
L16:
        .byte 32, 40, 98, 97, 115, 101, 32, 49, 48, 41, 10, 0
        .align 2
        .text
        la       $t0, L16
        move     $a0, $t0
        jal      R5


L9:
        lw       $ra, 0($sp)
        addu     $sp, $sp, 8
        jr       $ra

M0:
        subu     $sp, $sp, 4
        sw       $ra, 0($sp)
        li       $t0, 0
        move     $a0, $t0
        jal      F1

        li       $t0, 17
        move     $a0, $t0
        jal      F1

        li       $t0, 42
        move     $a0, $t0
        jal      F1


L17:
        lw       $ra, 0($sp)
        addu     $sp, $sp, 4
        jr       $ra


R6:
        subu     $sp, $sp, 8
        sw       $ra, 0($sp)
        li       $v0, 4
        syscall

        li       $v0, 10
        syscall

        lw       $ra, 0($sp)
        addu     $sp, $sp, 8
        jr       $ra


R0:
        subu     $sp, $sp, 4
        sw       $ra, 0($sp)
        .data
RGCS:
        .space 4
        .text
        li       $v0, 8
        la       $a0, RGCS
        li       $a1, 2
        syscall
        move     $t0, $a0
        lb       $t1, 0($t0)
        beqz     $t1, RGC1
        move     $v0, $t1
        j        RGC2
RGC1:
        li       $t1, 1
        negu     $t1, $t1
        move     $v0, $t1
RGC2:
        lw       $ra, 0($sp)
        addu     $sp, $sp, 4
        jr       $ra


R1:
        li       $v0, 10
        syscall

R2:
        subu     $sp, $sp, 8
        sw       $ra, 0($sp)
        sw       $a0, 4($sp)
        lw       $t0, 4($sp)
        beqz     $t0, RBL1
        .data
RBS1:
        .byte 116, 114, 117, 101, 0
        .text
        li       $v0, 4
        la       $a0, RBS1
        syscall

        j        RBL2
RBL1:
        .data
RBS2:
        .byte 102, 97, 108, 115, 101, 0
        .text
        li       $v0, 4
        la       $a0, RBS2
        syscall

RBL2:
        lw       $ra, 0($sp)
        addu     $sp, $sp, 8
        jr       $ra


R3:
        subu     $sp, $sp, 8
        sw       $ra, 0($sp)
        li       $v0, 11
        syscall
        lw       $ra, 0($sp)
        addu     $sp, $sp, 8
        jr       $ra


R4:
        subu     $sp, $sp, 8
        sw       $ra, 0($sp)
        li       $v0, 1
        syscall
        lw       $ra, 0($sp)
        addu     $sp, $sp, 8
        jr       $ra


R5:
        subu     $sp, $sp, 8
        sw       $ra, 0($sp)
        li       $v0, 4
        syscall
        lw       $ra, 0($sp)
        addu     $sp, $sp, 8
        jr       $ra
